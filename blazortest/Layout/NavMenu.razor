@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject HttpClient Http

<MudAppBar Elevation="1" Class="nav-container">

    <MudText Typo="Typo.h5" Class="nav-title">EG RTO</MudText>

    <MudSpacer />
    <div class="nav-icons">
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" OnClick="OpenGitHub" />
        <MudIconButton Icon="@Icons.Material.Filled.Api" OnClick="OpenLink" />
    </div>
    <MudSpacer />
    <MudButton Class="custom-logout-btn" OnClick="Logout">
        Logout
    </MudButton>
</MudAppBar>

@code {
    private void OpenGitHub()
    {
        // Open GitHub in a new tab
        var githubUrl = "https://github.com/Aaron-sharon/EGRTO";
        JS.InvokeVoidAsync("window.open", githubUrl, "_blank");
    }

    private void OpenLink()
    {
        var linkUrl = "https://localhost:7043/index.html";
        JS.InvokeVoidAsync("window.open", linkUrl, "_blank");
    }

    private async Task Logout()
    {
        // Call the backend logout API to clear the session on the server side
        await Http.PostAsync("api/auth/logout", null);

        // Clear the JWT token from local storage
        await JS.InvokeVoidAsync("localStorage.removeItem", "authToken");

        // Ensure `isAuthenticated` is also removed for UI control
        await JS.InvokeVoidAsync("localStorage.removeItem", "isAuthenticated");

        // Redirect to the login page
        Navigation.NavigateTo("/", forceLoad: true);
    }
}